package com.it.main;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.it.beans.Car;

public class Main {
	public static void main(String[] args) {
		// starting IOC container
	    // called as lazy loading
//		BeanFactory factory=new XmlBeanFactory(new ClassPathResource("Beans.xml"));  // XmlBeanFactory has been deprecated and removed from spring 5v
//		Car car = factory.getBean(Car.class);
		
		/*
		 * we can call Bean factory as a lazy loading because it is executing after calling getBean() 
		 * only it is creating object for the class otherwise it's not creating any object
		 * */
	
		// called as eager loading
		System.out.println("ApplicationContext started...");
		ApplicationContext context=new ClassPathXmlApplicationContext("Beans.xml");  
		
//		car obj created on demand basis i.e prototype bean obj are creating on demand basis
		context.getBean(Car.class);
//		
		
	}
}
